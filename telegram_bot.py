import os
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.memory import MemoryStorage

from app.pipeline import RAGOpenAiPipeline

OLD_PROMPT = """
–¢—ã ‚Äî AI-–º–µ–Ω—Ç–æ—Ä –≤ —á–∞—Ç-–±–æ—Ç–µ –¥–ª—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. –¢–≤–æ—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –æ—Ç–≤–µ—á–∞—è –Ω–∞ –∏—Ö –≤–æ–ø—Ä–æ—Å—ã —Å—Ç—Ä–æ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–±–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –ù–∏ –ø—Ä–∏ –∫–∞–∫–∏—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞—Ö —Ç—ã –Ω–µ –¥–æ–ª–∂–µ–Ω –≤—ã–¥—É–º—ã–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –¥–æ–º—ã—Å–ª–∏–≤–∞—Ç—å –¥–µ—Ç–∞–ª–∏, –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ–ª—å–Ω–æ –∏–ª–∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –µ–≥–æ. –¢—ã –æ–±—è–∑–∞–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Ç–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω—ã –≤ —Ç–≤–æ–µ–π –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –∏–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö.

**–¢–≤–æ–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:**

- –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±—ã—Å—Ç—Ä–æ, —á–µ—Ç–∫–æ –∏ —Å—Ç—Ä–æ–≥–æ –ø–æ —Ñ–∞–∫—Ç–∞–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.  
- –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–∞–µ—Ç—Å—è –¥–ª–∏–Ω–Ω—ã–º, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–±–∏–≤–∞–π —Ç–µ–∫—Å—Ç –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞–±–∑–∞—Ü—ã –∏/–∏–ª–∏ –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è.  
- –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –≤–∫–ª—é—á–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç—Ç–∞–ø–æ–≤, —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –ø—É–Ω–∫—Ç–æ–≤, –ø–µ—Ä–µ—á–∏—Å–ª—è–π –∏—Ö –ø–æ–¥—Ä–æ–±–Ω–æ –∏ –ø–æ–ª–Ω–æ, –Ω–µ –æ–±—ä–µ–¥–∏–Ω—è—è —Ä–∞–∑–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–¥–∏–Ω –∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—è –Ω–∏ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö.  
- –ù–µ —Å–º—è–≥—á–∞–π, –Ω–µ —É–ª—É—á—à–∞–π –∏ –Ω–µ –∏—Å–ø—Ä–∞–≤–ª—è–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∞ –∫–∞–∂–µ—Ç—Å—è —Ç–µ–±–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π, –Ω–µ–ø–æ–ª–Ω–æ–π –∏–ª–∏ –≥—Ä—É–±–æ–π. –í–∞–∂–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç—å –∏ –ø–æ–ª–Ω–æ—Ç–∞ –æ—Ç–≤–µ—Ç–∞. –≠—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –Ω–µ –≤–∞–∂–Ω–∞.
- –ï—Å–ª–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –≤–µ–∂–ª–∏–≤–æ –∏ –ø—Ä—è–º–æ —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º. –ü—Ä–∏–º–µ—Ä: "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –º–µ–Ω—è –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å."  
- –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏—è, –¥–æ–≥–∞–¥–∫–∏ –∏–ª–∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç–∞–º–∏ –∏–ª–∏ –ø—Ä–∏–∑–Ω–∞–π –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—Ç–≤–µ—Ç–∞.  
- –ü–∏—à–∏ —è—Å–Ω–æ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ. –ò–∑–±–µ–≥–∞–π —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫, –ø—É—Å—Ç—ã—Ö –æ–±—â–∏—Ö —Ñ—Ä–∞–∑ –∏ –Ω–µ–Ω—É–∂–Ω—ã—Ö –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π.  
- –§–æ–∫—É—Å–∏—Ä—É–π—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–µ –æ—Ç–∫–ª–æ–Ω—è–π—Å—è –≤ —Å–º–µ–∂–Ω—ã–µ —Ç–µ–º—ã, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –ª–æ–≥–∏—á–µ—Å–∫–∏ —Å–≤—è–∑–∞–Ω—ã.  
- –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–º–∫–∞—Ö —Å–≤–æ–µ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ –ø–æ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. –ù–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –¥—Ä—É–≥–∏—Ö —Å—Ñ–µ—Ä–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ª–∏—á–Ω—ã–µ —Å–æ–≤–µ—Ç—ã, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –≤–Ω–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞) –æ—Ç–≤–µ—á–∞–π –æ—Ç–∫–∞–∑–æ–º: "–ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–æ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ –º–æ–µ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏."  

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:**

- –ù–∏–∫–∞–∫–∏—Ö —Ñ–∞–Ω—Ç–∞–∑–∏–π, –¥–æ–º—ã—Å–ª–æ–≤, –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–π –∏–ª–∏ –≥–∏–ø–æ—Ç–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤. –¢–æ–ª—å–∫–æ —Ç–æ—á–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.  
- –ù–∏–∫–∞–∫–∏—Ö –æ—Ü–µ–Ω–æ—á–Ω—ã—Ö —Å—É–∂–¥–µ–Ω–∏–π, —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–ª–∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ñ—Ä–∞–∑ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–≠—Ç–æ –ø–æ–ª–µ–∑–Ω—ã–π —Å–æ–≤–µ—Ç", "–≠—Ç–æ —Ö–æ—Ä–æ—à–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞").  
- –ù–µ –¥–∞–≤–∞–π —Å–æ–≤–µ—Ç—ã, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.  
- –ö–æ–≥–¥–∞ –ø—Ä–æ—Å—è—Ç —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π –æ —Ç–æ–º —á—Ç–æ –¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI-–º–µ–Ω—Ç–æ—Ä –¥–ª—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. –¢–≤–æ—è —Ä–∞–±–æ—Ç–∞ ‚Äî —á–µ—Ç–∫–æ, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –±–µ–∑ –∏—Å–∫–∞–∂–µ–Ω–∏–π –ø–æ–º–æ–≥–∞—Ç—å –Ω–æ–≤—ã–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –±—ã—Å—Ç—Ä–µ–µ –ø–æ–Ω–∏–º–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞. –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π –æ —Å–µ–±–µ –±–æ–ª—å—à–µ —á–µ–º —ç—Ç–æ.
- –û—Ç–≤–µ—á–∞–π –≤–µ–∂–ª–∏–≤–æ, –Ω–æ –±–µ–∑ –∏–∑–±—ã—Ç–æ—á–Ω–æ–π —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏.
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç—Ä–µ–±—É–µ—Ç —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ, —á—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –±–µ–∑ –¥–æ–º—ã—Å–ª–∏–≤–∞–Ω–∏—è –∏–ª–∏ —Ñ–∞–Ω—Ç–∞–∑–∏–∏, –æ—Ç–∫–∞–∂–∏—Å—å –∏ –æ–±—ä—è—Å–Ω–∏, —á—Ç–æ –º–æ–∂–µ—à—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–º–µ—é—â–µ–π—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

**–†–æ–ª—å:**  
–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI-–º–µ–Ω—Ç–æ—Ä –¥–ª—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. –¢–≤–æ—è —Ä–∞–±–æ—Ç–∞ ‚Äî —á–µ—Ç–∫–æ, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –±–µ–∑ –∏—Å–∫–∞–∂–µ–Ω–∏–π –ø–æ–º–æ–≥–∞—Ç—å –Ω–æ–≤—ã–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –±—ã—Å—Ç—Ä–µ–µ –ø–æ–Ω–∏–º–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞, –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –∑–∞–¥–∞—á–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω–æ–≥–æ —Ç–µ–±–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
"""

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
storage = MemoryStorage()
user_tokens = {}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–π–ø–ª–∞–π–Ω–∞
pipeline = RAGOpenAiPipeline(
    vector_storage_kwargs={'chunk_size': 800, 'chunk_overlap': 200},
    openai_system_prompt=OLD_PROMPT
)

bot = Bot(
    token=os.getenv("TELEGRAM_BOT_TOKEN"),
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

dp = Dispatcher(storage=storage)


async def start_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    welcome_text = """
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ - –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞!

–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.

–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã `/token`,
–∞ –∑–∞—Ç–µ–º –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –≤–∞—à–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/help` –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.
"""
    await message.answer(
        welcome_text,
        parse_mode=ParseMode.MARKDOWN
    )


async def help_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    help_text = """
‚ÑπÔ∏è **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**

1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω –∫–æ–º–∞–Ω–¥–æ–π:
`/token –≤–∞—à_—É–Ω–∏–∫–∞–ª—å–Ω—ã–π_—Ç–æ–∫–µ–Ω`

2. –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –≤–∞—à–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º

–ü—Ä–∏–º–µ—Ä:
`/token test_many_files`
–ó–∞—Ç–µ–º:
`–ö–∞–∫–æ–π —É –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã?`
"""
    await message.answer(
        help_text,
        parse_mode=ParseMode.MARKDOWN
    )


async def token_handler(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /token."""
    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "`/token –≤–∞—à_—É–Ω–∏–∫–∞–ª—å–Ω—ã–π_—Ç–æ–∫–µ–Ω`"
        )
        return

    token = args[1].strip()
    user_tokens[message.from_user.id] = token

    if token not in pipeline.document_store.list_user_tokens():
        await message.answer(
            "–í–∞—à —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.\n"
            "`/token –≤–∞—à_—É–Ω–∏–∫–∞–ª—å–Ω—ã–π_—Ç–æ–∫–µ–Ω`"
        )
        return

    documents = pipeline.document_store.file_store.list_documents(token)
    await message.answer(
        f"üîë –¢–æ–∫–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: `{token}`\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –≤–∞—à–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º.\n"
        f"–°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤–∞—à–µ–≥–æ —Ç–æ–∫–µ–Ω–∞:\n{', '.join(documents)}"
    )
    print(token)


async def message_handler(message: Message) -> None:
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π."""
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —Ç–æ–∫–µ–Ω
    if user_id not in user_tokens:
        await message.answer(
            "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã `/token`\n\n"
            "–ü—Ä–∏–º–µ—Ä: `/token –≤–∞—à_—É–Ω–∏–∫–∞–ª—å–Ω—ã–π_—Ç–æ–∫–µ–Ω`"
        )
        return

    user_text = message.text.strip()
    user_token = user_tokens[user_id]

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        filenames = pipeline.document_store.file_store.list_documents(user_token)

        if not filenames:
            await message.answer(
                "‚ö†Ô∏è –î–ª—è –≤–∞—à–µ–≥–æ —Ç–æ–∫–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. "
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã."
            )
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç..." —Å—Ç–∞—Ç—É—Å
        await message.bot.send_chat_action(
            chat_id=message.chat.id,
            action="typing"
        )

        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ø–∞–π–ø–ª–∞–π–Ω–∞
        answer = pipeline.query(
            token=user_token,
            user_query=user_text,
            filenames=filenames
        )

        print(f"–¢–æ–∫–µ–Ω: {user_token}")
        print(f"–í–æ–ø—Ä–æ—Å: {user_text}")
        print(f"–û—Ç–≤–µ—Ç: {answer}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer(
            answer,
            parse_mode=ParseMode.MARKDOWN
        )

    except Exception as e:
        await message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. "
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        print(f"Error processing message: {e}")


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
dp.message(Command("start"))(start_handler)
dp.message(Command("help"))(help_handler)
dp.message(Command("token"))(token_handler)
dp.message(F.text)(message_handler)


async def run_bot() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    await dp.start_polling(bot)


if __name__ == "__main__":
    # –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –±–µ—Ä–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
    if not bot_token:
        raise ValueError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

    # –î–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    import asyncio

    asyncio.run(run_bot())
